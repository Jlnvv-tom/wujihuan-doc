import{_ as n,c as a,o as p,ag as e}from"./chunks/framework.B9f5WVuf.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"computer/graph.md","filePath":"computer/graph.md","lastUpdated":1679758597000}'),t={name:"computer/graph.md"};function i(l,s,r,c,o,d){return p(),a("div",null,s[0]||(s[0]=[e(`<div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A[方形] --&gt;B(圆角)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C{条件a}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt;|a=1| D[结果1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt;|a=2| E[结果2]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F[横向流程图]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>raph LR A[方形] --&gt;B(圆角) B --&gt; C{条件 a} C --&gt;|a=1| D[结果 1] C --&gt;|a=2| E[结果 2] F[横向流程图]</p><div class="language-flow vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">flow</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>st=&gt;start: 开始框</span></span>
<span class="line"><span>op=&gt;operation: 处理框</span></span>
<span class="line"><span>cond=&gt;condition: 判断框(是或否?)</span></span>
<span class="line"><span>sub1=&gt;subroutine: 子流程</span></span>
<span class="line"><span>io=&gt;inputoutput: 输入输出框</span></span>
<span class="line"><span>e=&gt;end: 结束框</span></span>
<span class="line"><span>st-&gt;op-&gt;cond</span></span>
<span class="line"><span>cond(yes)-&gt;io-&gt;e</span></span>
<span class="line"><span>cond(no)-&gt;sub1(right)-&gt;op</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>st=&gt;start: 开始框 op=&gt;operation: 处理框 cond=&gt;condition: 判断框(是或否?) sub1=&gt;subroutine: 子流程 io=&gt;inputoutput: 输入输出框 e=&gt;end: 结束框 st-&gt;op-&gt;cond cond(yes)-&gt;io-&gt;e cond(no)-&gt;sub1(right)-&gt;op</p>`,4)]))}const b=n(t,[["render",i]]);export{u as __pageData,b as default};
